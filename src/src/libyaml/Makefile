#############################################################################
# Makefile for building: liblibyaml.a
# Generated by qmake (2.01a) (Qt 4.3.4) on: Wed Aug 27 09:04:52 2008
# Project:  libyaml.pro
# Template: lib
# Command: /usr/bin/qmake -unix -o Makefile libyaml.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_SHARED
CFLAGS        = -pipe -O2 -fPIC $(DEFINES)
CXXFLAGS      = -pipe -fpermissive -O2 -fPIC $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I.
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = api.c \
		dumper.c \
		emitter.c \
		loader.c \
		parser.c \
		reader.c \
		scanner.c \
		writer.c 
OBJECTS       = api.o \
		dumper.o \
		emitter.o \
		loader.o \
		parser.o \
		reader.o \
		scanner.o \
		writer.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf \
		libyaml.pro
QMAKE_TARGET  = libyaml
DESTDIR       = 
TARGET        = liblibyaml.a

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET) 

staticlib: $(TARGET)

$(TARGET):  $(OBJECTS) $(OBJCOMP) 
	-$(DEL_FILE) $(TARGET)
	$(AR) $(TARGET) $(OBJECTS)


Makefile: libyaml.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/staticlib.prf \
		/usr/share/qt4/mkspecs/features/static.prf
	$(QMAKE) -unix -o Makefile libyaml.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/staticlib.prf:
/usr/share/qt4/mkspecs/features/static.prf:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile libyaml.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/libyaml1.0.0 || $(MKDIR) .tmp/libyaml1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/libyaml1.0.0/ && (cd `dirname .tmp/libyaml1.0.0` && $(TAR) libyaml1.0.0.tar libyaml1.0.0 && $(COMPRESS) libyaml1.0.0.tar) && $(MOVE) `dirname .tmp/libyaml1.0.0`/libyaml1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/libyaml1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_clean: 

####### Compile

api.o: api.c config.h \
		yaml_private.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o api.o api.c

dumper.o: dumper.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o dumper.o dumper.c

emitter.o: emitter.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o emitter.o emitter.c

loader.o: loader.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o loader.o loader.c

parser.o: parser.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o parser.o parser.c

reader.o: reader.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o reader.o reader.c

scanner.o: scanner.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o scanner.o scanner.c

writer.o: writer.c yaml_private.h \
		config.h \
		yaml.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o writer.o writer.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

